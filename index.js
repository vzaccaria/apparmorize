#!/usr/bin/env node
// Generated by LiveScript 1.3.1
(function(){
  var fs, path, docopt, _, __, doc, getOption, o, npmDir, profileTemplateName, fileName, aprofileTemplateName, profileData, absoluteFilename, profileName, object, engine, e;
  fs = require('fs');
  path = require('path');
  docopt = require('docopt').docopt;
  _ = require('shelljs');
  __ = require('bluebird');
  doc = _.cat(__dirname + "/docs/usage.md");
  fs = __.promisifyAll(fs);
  getOption = function(a, b, def, o){
    if (!o[a] && !o[b]) {
      return def;
    } else {
      return o[b];
    }
  };
  o = docopt(doc);
  npmDir = path.dirname(__filename);
  profileTemplateName = getOption('-p', '--profile', 'standard', o);
  fileName = o['PROGRAM'];
  aprofileTemplateName = npmDir + "/profiles/" + profileTemplateName + "/profile.txt";
  if (!_.test('-e', aprofileTemplateName + "")) {
    console.log("Sorry, profile '" + aprofileTemplateName + "' does not exist");
    process.exit(1);
  }
  profileData = fs.readFileSync(aprofileTemplateName, 'utf-8');
  absoluteFilename = path.resolve(fileName);
  profileName = absoluteFilename.replace('/', '');
  profileName = profileName.replace(/\//g, '.');
  object = {
    profile: {
      date: require('moment')().format('MMMM DDD, YYYY - HH:MM'),
      programName: absoluteFilename,
      profileName: profileName
    }
  };
  engine = require('liquid-node').Engine;
  e = new engine();
  e.parseAndRender(profileData, object).then(function(it){
    return fs.writeFileAsync(process.cwd() + "/" + profileName, it, 'utf-8');
  }).then(function(){
    return console.log("Done");
  });
}).call(this);
